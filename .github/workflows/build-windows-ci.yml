name: Build Windows
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build - ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-latest
            name: "Windows x64 MSVC"
            artifact: "Windows-MSVC.tar.xz"
            build_type: "RelWithDebInfo"
            environment_script: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
            cc: "cl"
            cxx: "cl"
            archiver: "7z a"
            generators: "Visual Studio 16 2022"
            build_dir: 'build'
    steps:
      - name: Build lua-debug
        shell: cmd
        run: |
          git clone https://github.com/actboy168/luamake
          pushd luamake
          git submodule init
          git submodule update
          ./compile/install.bat
          popd
          
          git clone https://github.com/actboy168/lua-debug
          cd lua-debug
          git submodule init
          git submodule update
          luamake lua compile/download_deps.lua
          luamake -mode release
          
          echo "ALL FILES"
          ls -R

      - name: Copy Files
        shell: python
        run: |
          import shutil
          import os
          import platform

          if platform == "linux":
              luadebug_bin_path = "runtime/linux-x64/luajit"
              luadebug_bin_name = "luadebug.so"
          else:
              luadebug_bin_path = "runtime/win32-x64/luajit"
              luadebug_bin_name = "luadebug.dll"

          # Set luadebug_root = currentDirectory + "/lua-debug"
          luadebug_root = os.path.join(os.getcwd(), "lua-debug")

          # Set install_dir = currentDirectory + "/release"
          install_dir = os.path.join(os.getcwd(), "release")

          # Create path install_dir + "/lua/modules/lua-debug/" + luadebug_bin_path
          luadebug_module_path = os.path.join(install_dir, "lua", "modules", "lua-debug", luadebug_bin_path)
          os.makedirs(luadebug_module_path, exist_ok=True)

          # Copy contents of luadebug_root + "/publish/script" to install_dir + "/lua/modules/lua-debug/script/"
          script_source_dir = os.path.join(luadebug_root, "publish", "script")
          script_destination_dir = os.path.join(install_dir, "lua", "modules", "lua-debug", "script")
          shutil.copytree(script_source_dir, script_destination_dir)

          # Copy luadebug_root + "/publish/" + luadebug_bin_path + "/" + luadebug_bin_name to install_dir + "/lua/modules/lua-debug/" + luadebug_bin_path + "/"
          luadebug_bin_source = os.path.join(luadebug_root, "publish", luadebug_bin_path, luadebug_bin_name)
          luadebug_bin_destination = os.path.join(install_dir, "lua", "modules", "lua-debug", luadebug_bin_path, luadebug_bin_name)
          shutil.copy2(luadebug_bin_source, luadebug_bin_destination)

      - name: Release Binaries
        uses: Silverlan/common_actions/release_nightly_binaries@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.ref_name }}
